// gShell is licensed under the GNU GENERAL PUBLIC LICENSE, Version 3
//
// http://www.gnu.org/licenses/gpl-3.0.en.html
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//
// gShell is based upon https://github.com/google/google-api-dotnet-client, which is licensed under the Apache 2.0
// license: https://github.com/google/google-api-dotnet-client/blob/master/LICENSE
//
// gShell is reliant upon the Google Apis. Please see the specific API pages for specific licensing information.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a fork of google-apis-code-generator:
//       https://github.com/squid808/apis-client-generator
//
//     How neat is that? Pretty neat.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq;
using System.Management.Automation;
using Google.Apis.admin.DataTransfer.datatransfer_v1.Data;
using gDataTransfer = gShell.dotNet.DataTransfer;

namespace gShell.Cmdlets.DataTransfer
{
    public enum ApplicationTransferStatusEnum
    {
        completed,
        failed,
        inProgress,
        pending
    }

    /// <summary>
    /// <para type="synopsis">Creates a new DataTransfer API ApplicationDataTransfer object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a ApplicationDataTransfer object which may be required as a parameter for some other Cmdlets in the DataTransfer API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.DataTransfer.datatransfer_v1.Data.ApplicationDataTransfer</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google DataTransfer API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\> New-GDataTransferApplicationDataObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDataTransferApplicationDataObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDataTransferApplicationDataObj",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/New-GDataTransferApplicationDataObj")]
    [OutputType(typeof(ApplicationDataTransfer))]
    public class NewGDataTransferApplicationDataObjCommand : PSCmdlet
    {
        #region Properties

        /// <summary>
        /// <para type="description">The application's ID.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "The application's ID.")]
        public long? ApplicationId { get; set; }

        /// <summary>
        /// <para type="description">The transfer parameters for the application. These parameters are used to select the data which will get transfered in context of this application.</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "The transfer parameters for the application. These parameters are used to select the data which will get transfered in context of this application."
            )]
        public ApplicationTransferParam[] ApplicationTransferParams { get; set; }

        /// <summary>
        /// <para type="description">Current status of transfer for this application. (Read-only)</para>
        /// </summary>
        [Parameter(Position = 2,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Current status of transfer for this application. (Read-only)")]
        public ApplicationTransferStatusEnum? ApplicationTransferStatus { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            var ohMyGodImTired = new ApplicationDataTransfer
            {
                ApplicationId = ApplicationId,
                ApplicationTransferParams = ApplicationTransferParams
            };

            if (ApplicationTransferStatus != null)
                ohMyGodImTired.ApplicationTransferStatus = ApplicationTransferStatus.Value.ToString();

            if (ShouldProcess("ApplicationDataTransfer"))
            {
                WriteObject(ohMyGodImTired);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new DataTransfer API DataTransfer object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a DataTransfer object which may be required as a parameter for some other Cmdlets in the DataTransfer API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.DataTransfer.datatransfer_v1.Data.DataTransfer</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google DataTransfer API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\> New-GDataTransferDataObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDataTransferDataObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDataTransferDataObj",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/New-GDataTransferDataObj")]
    [OutputType(typeof(Google.Apis.admin.DataTransfer.datatransfer_v1.Data.DataTransfer))]
    public class NewGDataTransferDataObjCommand : PSCmdlet
    {
        #region Properties

        /// <summary>
        /// <para type="description">List of per application data transfer resources. It contains data transfer details of the applications associated with this transfer resource. Note that this list is also used to specify the applications for which data transfer has to be done at the time of the transfer resource creation.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "List of per application data transfer resources. It contains data transfer details of the applications associated with this transfer resource. Note that this list is also used to specify the applications for which data transfer has to be done at the time of the transfer resource creation."
            )]
        public ApplicationDataTransfer[] ApplicationDataTransfers { get; set; }

        /// <summary>
        /// <para type="description">The transfer's ID (Read-only).</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "The transfer's ID (Read-only).")]
        public string Id { get; set; }

        /// <summary>
        /// <para type="description">ID of the user to whom the data is being transfered.</para>
        /// </summary>
        [Parameter(Position = 2,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "ID of the user to whom the data is being transfered.")]
        public string NewOwnerUserId { get; set; }

        /// <summary>
        /// <para type="description">ID of the user whose data is being transfered.</para>
        /// </summary>
        [Parameter(Position = 3,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "ID of the user whose data is being transfered.")]
        public string OldOwnerUserId { get; set; }

        /// <summary>
        /// <para type="description">Overall transfer status (Read-only).</para>
        /// </summary>
        [Parameter(Position = 4,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Overall transfer status (Read-only).")]
        public string OverallTransferStatusCode { get; set; }

        /// <summary>
        /// <para type="description">The time at which the data transfer was requested (Read-only).</para>
        /// </summary>
        [Parameter(Position = 5,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "The time at which the data transfer was requested (Read-only).")]
        public DateTime? RequestTime { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            var body = new Google.Apis.admin.DataTransfer.datatransfer_v1.Data.DataTransfer
            {
                ApplicationDataTransfers = ApplicationDataTransfers,
                Id = Id,
                NewOwnerUserId = NewOwnerUserId,
                OldOwnerUserId = OldOwnerUserId,
                OverallTransferStatusCode = OverallTransferStatusCode,
                RequestTime = RequestTime
            };

            if (ShouldProcess("DataTransfer"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new DataTransfer API Application object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a Application object which may be required as a parameter for some other Cmdlets in the DataTransfer API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.DataTransfer.datatransfer_v1.Data.Application</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google DataTransfer API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\> New-GDataTransferApplicationObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDataTransferApplicationObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDataTransferApplicationObj",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/New-GDataTransferApplicationObj")]
    [OutputType(typeof(Application))]
    public class NewGDataTransferApplicationObjCommand : PSCmdlet
    {
        #region Properties

        /// <summary>
        /// <para type="description">The application's ID.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "The application's ID.")]
        public long? Id { get; set; }

        /// <summary>
        /// <para type="description">The application's name.</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "The application's name.")]
        public string Name { get; set; }

        /// <summary>
        /// <para type="description">The list of all possible transfer parameters for this application. These parameters can be used to select the data of the user in this application to be transfered.</para>
        /// </summary>
        [Parameter(Position = 2,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage =
                "The list of all possible transfer parameters for this application. These parameters can be used to select the data of the user in this application to be transfered."
            )]
        public ApplicationTransferParam[] TransferParams { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            var body = new Application
            {
                Id = Id,
                Name = Name,
                TransferParams = TransferParams
            };

            if (ShouldProcess("Application"))
            {
                WriteObject(body);
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Creates a new DataTransfer API ApplicationTransferParam object.</para>
    /// <para type="description">This provides a Cmdlet-Based approach to creating a ApplicationTransferParam object which may be required as a parameter for some other Cmdlets in the DataTransfer API category.</para>
    /// <para type="description">You could alternately create this object by calling New-Object -TypeName Google.Apis.admin.DataTransfer.datatransfer_v1.Data.ApplicationTransferParam</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google DataTransfer API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\> New-GDataTransferApplicationParamObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDataTransferApplicationParamObj">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDataTransferApplicationParamObj",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/New-GDataTransferApplicationParamObj")]
    [OutputType(typeof(ApplicationTransferParam))]
    public class NewGDataTransferApplicationParamObjCommand : PSCmdlet
    {
        #region Properties

        /// <summary>
        /// <para type="description">The type of the transfer parameter. eg: 'PRIVACY_LEVEL'</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "The type of the transfer parameter. eg: 'PRIVACY_LEVEL'")]
        public string Key { get; set; }

        /// <summary>
        /// <para type="description">The value of the coressponding transfer parameter. eg: 'PRIVATE' or 'SHARED'</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = false,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "The value of the coressponding transfer parameter. eg: 'PRIVATE' or 'SHARED'")]
        public string[] Value { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            var body = new ApplicationTransferParam
            {
                Key = Key,
                Value = Value
            };

            if (ShouldProcess("ApplicationTransferParam"))
            {
                WriteObject(body);
            }
        }
    }
}

namespace gShell.Cmdlets.DataTransfer.Applications
{
    /// <summary>
    /// <para type="synopsis">Retrieves information about an application for the given application ID.</para>
    /// <para type="description">Retrieves information about an application for the given application ID.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google DataTransfer API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\> Get-GDataTransferApplication -ApplicationId $SomeApplicationId</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <example>
    ///   <code>PS C:\> Get-GDataTransferApplication -All</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDataTransferApplication">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDataTransferApplication",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDataTransferApplication")]
    public class GetGDataTransferApplicationCommand : DataTransferBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">ID of the application resource to be retrieved.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ParameterSetName = "One",
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "ID of the application resource to be retrieved.")]
        public long ApplicationId { get; set; }

        /// <summary>
        /// <para type="description">A switch to list all results</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ParameterSetName = "List",
            HelpMessage = "A switch to list all results.")]
        public SwitchParameter All { get; set; }

        /// <summary>
        /// <para type="description">Immutable ID of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = false,
            ParameterSetName = "List",
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Immutable ID of the Google Apps account.")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of results to return. Default is 100.</para>
        /// </summary>
        [Parameter(Position = 2,
            Mandatory = false,
            ParameterSetName = "List",
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Maximum number of results to return. Default is 100.")]
        public int? MaxResults { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("DataTransfer Applications", "Get-GDataTransferApplication"))
            {
                if (ParameterSetName == "One")
                {
                    WriteObject(applications.Get(ApplicationId, StandardQueryParams: StandardQueryParams));
                }
                else
                {
                    var properties = new gDataTransfer.Applications.ApplicationsListProperties
                    {
                        MaxResults = MaxResults = 500
                    };

                    if (!string.IsNullOrWhiteSpace(CustomerId)) properties.CustomerId = CustomerId;
                    if (MaxResults.HasValue) properties.TotalResults = MaxResults.Value;

                    if (ShouldProcess("DataTransfer Applicaiton", "Get-GDataTransferApplication"))
                    {
                        List<Application> results =
                            applications.List(properties, StandardQueryParams: StandardQueryParams).SelectMany(x => x.Applications).ToList();

                        WriteObject(results);
                    }
                }
            }
        }
    }
}

namespace gShell.Cmdlets.DataTransfer.Transfers
{
    /// <summary>
    /// <para type="synopsis">Retrieves a data transfer request by its resource ID.</para>
    /// <para type="description">Retrieves a data transfer request by its resource ID.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google DataTransfer API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\> Get-GDataTransfer -DataTransferId $SomeDataTransferIdString</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <example>
    ///   <code>PS C:\> Get-GDataTransfer -All</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Get-GDataTransfer">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.Get, "GDataTransfer",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/Get-GDataTransfer")]
    public class GetGDataTransferCommand : DataTransferBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">ID of the resource to be retrieved. This is returned in the response from the insert method.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ParameterSetName = "One",
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "ID of the resource to be retrieved. This is returned in the response from the insert method."
            )]
        public string DataTransferId { get; set; }

        /// <summary>
        /// <para type="description">A switch to list all results</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = true,
            ParameterSetName = "List",
            HelpMessage = "A switch to list all results.")]
        public SwitchParameter All { get; set; }

        /// <summary>
        /// <para type="description">Immutable ID of the Google Apps account.</para>
        /// </summary>
        [Parameter(Position = 1,
            Mandatory = false,
            ParameterSetName = "List",
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Immutable ID of the Google Apps account.")]
        public string CustomerId { get; set; }

        /// <summary>
        /// <para type="description">Maximum number of results to return. Default is 100.</para>
        /// </summary>
        [Parameter(Position = 2,
            Mandatory = false,
            ParameterSetName = "List",
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Maximum number of results to return. Default is 100.")]
        public int? MaxResults { get; set; }

        /// <summary>
        /// <para type="description">Destination user's profile ID.</para>
        /// </summary>
        [Parameter(Position = 3,
            Mandatory = false,
            ParameterSetName = "List",
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Destination user's profile ID.")]
        public string NewOwnerUserId { get; set; }

        /// <summary>
        /// <para type="description">Source user's profile ID.</para>
        /// </summary>
        [Parameter(Position = 4,
            Mandatory = false,
            ParameterSetName = "List",
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Source user's profile ID.")]
        public string OldOwnerUserId { get; set; }

        /// <summary>
        /// <para type="description">Status of the transfer.</para>
        /// </summary>
        [Parameter(Position = 5,
            Mandatory = false,
            ParameterSetName = "List",
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "Status of the transfer.")]
        public string Status { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("DataTransfer Transfers", "Get-GDataTransfer"))
            {
                if (ParameterSetName == "One")
                {
                    WriteObject(transfers.Get(DataTransferId, StandardQueryParams: StandardQueryParams));
                }
                else
                {
                    var properties = new gDataTransfer.Transfers.TransfersListProperties
                    {
                        CustomerId = CustomerId,
                        NewOwnerUserId = NewOwnerUserId,
                        OldOwnerUserId = OldOwnerUserId,
                        Status = Status
                    };

                    if (MaxResults.HasValue) properties.TotalResults = MaxResults.Value;

                    WriteObject(transfers.List(properties, StandardQueryParams: StandardQueryParams).SelectMany(x => x.DataTransfers).ToList());
                }
            }
        }
    }

    /// <summary>
    /// <para type="synopsis">Inserts a data transfer request.</para>
    /// <para type="description">Inserts a data transfer request.</para>
    /// <list type="alertSet"><item><term>About this Cmdlet</term><description>
    /// Part of the gShell Project, relating to the Google DataTransfer API; see Related Links or use the -Online parameter.
    /// </description></item></list>
    /// <example>
    ///   <code>PS C:\> New-GDataTransfer -DataTransferBody $SomeDataTransferObj</code>
    ///   <para>This automatically generated example serves to show the bare minimum required to call this Cmdlet.</para>
    ///   <para>Additional examples may be added, viewed and edited by users on the community wiki at the URL found in the related links.</para>
    /// </example>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/New-GDataTransfer">[Wiki page for this Cmdlet]</para>
    /// <para type="link" uri="https://github.com/squid808/gShell/wiki/Getting-Started">[Getting started with gShell]</para>
    /// </summary>
    [Cmdlet(VerbsCommon.New, "GDataTransfer",
        SupportsShouldProcess = true,
        HelpUri = @"https://github.com/squid808/gShell/wiki/New-GDataTransfer")]
    public class NewGDataTransferCommand : DataTransferBase
    {
        #region Properties

        /// <summary>
        /// <para type="description">The JSON template for a DataTransfer resource.</para>
        /// </summary>
        [Parameter(Position = 0,
            Mandatory = false,
            ValueFromPipeline = true,
            ValueFromPipelineByPropertyName = true,
            HelpMessage = "The JSON template for a DataTransfer resource.")]
        public Google.Apis.admin.DataTransfer.datatransfer_v1.Data.DataTransfer DataTransferBody { get; set; }

        #endregion

        protected override void ProcessRecord()
        {
            if (ShouldProcess("DataTransfer Transfers", "Insert-GDataTransfer"))
            {
                WriteObject(transfers.Insert(DataTransferBody, StandardQueryParams: StandardQueryParams));
            }
        }
    }
}