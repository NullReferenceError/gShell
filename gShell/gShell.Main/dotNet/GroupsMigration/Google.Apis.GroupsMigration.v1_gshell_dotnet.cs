// gShell is licensed under the GNU GENERAL PUBLIC LICENSE, Version 3
//
// http://www.gnu.org/licenses/gpl-3.0.en.html
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.
//
// gShell is based upon https://github.com/google/google-api-dotnet-client, which is licensed under the Apache 2.0
// license: https://github.com/google/google-api-dotnet-client/blob/master/LICENSE
//
// gShell is reliant upon the Google Apis. Please see the specific API pages for specific licensing information.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a fork of google-apis-code-generator:
//       https://github.com/squid808/apis-client-generator
//
//     How neat is that? Pretty neat.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using gShell.Cmdlets.Utilities.OAuth2;
using gShell.dotNet;

namespace gShell.Cmdlets.GroupsMigration{

    using System;
    using System.Collections.Generic;
    using System.Management.Automation;

    using Google.Apis.Auth.OAuth2;
    using Google.Apis.Services;
    using v1 = Google.Apis.GroupsMigration.v1;
    using Data = Google.Apis.GroupsMigration.v1.Data;

    using gShell.dotNet.Utilities;
    using gShell.dotNet.Utilities.OAuth2;
    using gGroupsMigration = gShell.dotNet.GroupsMigration;

    /// <summary>
    /// A PowerShell-ready wrapper for the GroupsMigration api, as well as the resources and methods therein.
    /// </summary>
    public abstract class GroupsMigrationBase : AuthenticatedCmdletBase
    {

        #region Properties

        /// <summary>The gShell dotNet class wrapper base.</summary>
        protected static gGroupsMigration mainBase { get; set; }


        /// <summary>An instance of the Archive gShell dotNet resource.</summary>
        public Archive archive { get; set; }

        /// <summary>
        /// Required to be able to store and retrieve the mainBase from the ServiceWrapperDictionary
        /// </summary>
        protected override Type mainBaseType { get { return typeof(gGroupsMigration); } }
        #endregion

        #region Constructors
        protected GroupsMigrationBase()
        {
            mainBase = new gGroupsMigration();

            ServiceWrapperDictionary[mainBaseType] = mainBase;


            archive = new Archive();
        }
        #endregion

        #region Wrapped Methods



        #region Archive

        /// <summary>A wrapper class for the Archive resource.</summary>
        public class Archive
        {




            /// <summary>Inserts a new mail into the archive of the Google group.</summary>
            /// <param name="GroupId">The group ID</param>
            public Google.Apis.GroupsMigration.v1.Data.Groups Insert (string GroupId)
            {

                return mainBase.archive.Insert(GroupId);
            }


            /// <summary>3</summary>
            public void Insert (string groupId, System.IO.Stream stream, string contentType)
            {

                mainBase.archive.Insert(groupId, stream, contentType);
            }
        }
        #endregion

        #endregion

    }
}



namespace gShell.dotNet
{
    using System;
    using System.Collections.Generic;

    using gShell.dotNet;
    using gShell.dotNet.Utilities.OAuth2;

    using v1 = Google.Apis.GroupsMigration.v1;
    using Data = Google.Apis.GroupsMigration.v1.Data;

    /// <summary>The dotNet gShell version of the groupsmigration api.</summary>
    public class GroupsMigration : ServiceWrapper<v1.GroupsMigrationService>, IServiceWrapper<Google.Apis.Services.IClientService>
    {

        protected override bool worksWithGmail { get { return true; } }

        /// <summary>Creates a new v1.GroupsMigration service.</summary>
        /// <param name="domain">The domain to which this service will be authenticated.</param>
        /// <param name="authInfo">The authenticated AuthInfo for this user and domain.</param>
        /// <param name="gShellServiceAccount">The optional email address the service account should impersonate.</param>

        protected override v1.GroupsMigrationService CreateNewService(string domain, AuthenticatedUserInfo authInfo, string gShellServiceAccount = null)
        {
            return new v1.GroupsMigrationService(OAuth2Base.GetInitializer(domain, authInfo));
        }

        /// <summary>Returns the api name and version in {name}:{version} format.</summary>
        public override string apiNameAndVersion { get { return "groupsmigration:v1"; } }


        /// <summary>Gets or sets the archive resource class.</summary>
        public Archive archive{ get; set; }

        public GroupsMigration()
        {

            archive = new Archive();
        }



        /// <summary>The "archive" collection of methods.</summary>
        public class Archive
        {




            /// <summary>Inserts a new mail into the archive of the Google group.</summary>
            /// <param name="GroupId">The group ID</param>
            /// <param name="gShellServiceAccount">The optional email address the service account should impersonate.</param>
            public Google.Apis.GroupsMigration.v1.Data.Groups Insert (string GroupId)
            {
                var request = GetService().Archive.Insert(GroupId);



                return request.Execute();
            }


            public void Insert (string groupId, System.IO.Stream stream, string contentType)
            {
                var request = GetService().Archive.Insert(groupId, stream, contentType);



                request.Upload();
            }

        }

    }
}