// Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
// an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
// specific language governing permissions and limitations under the License.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by google-apis-code-generator 1.5.1
//     C# generator version: 1.10.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

/**
 * \mainpage
 *   Admin Email Settings API Version sharedcontacts_v3
 *
 * \section ApiInfo API Version Information
 *    <table>
 *      <tr><th>API
 *          <td><a href='https://developers.google.com/admin-sdk/domain-shared-contacts/'>Admin Email Settings API</a>
 *      <tr><th>API Version<td>sharedcontacts_v3
 *      <tr><th>API Rev<td>0
 *      <tr><th>API Docs
 *          <td><a href='https://developers.google.com/admin-sdk/domain-shared-contacts/'>
 *              https://developers.google.com/admin-sdk/domain-shared-contacts/</a>
 *      <tr><th>Discovery Name<td>admin
 *    </table>
 *
 * \section ForMoreInfo For More Information
 *
 * The complete API documentation for using Admin Email Settings API can be found at
 * <a href='https://developers.google.com/admin-sdk/domain-shared-contacts/'>https://developers.google.com/admin-sdk/domain-shared-contacts/</a>.
 *
 * For more information about the Google APIs Client Library for .NET, see
 * <a href='https://developers.google.com/api-client-library/dotnet/get_started'>
 * https://developers.google.com/api-client-library/dotnet/get_started</a>
 */

namespace Google.Apis.admin.Sharedcontacts.sharedcontacts_v3.Data
{    

    public class Contact : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("category")]
        public virtual string Category { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("content")]
        public virtual string Content { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("deleted")]
        public virtual System.Nullable<bool> Deleted { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("email")]
        public virtual System.Collections.Generic.IList<Email> Email { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("extendedProperty")]
        public virtual System.Collections.Generic.IList<ExtendedProperty> ExtendedProperty { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("im")]
        public virtual System.Collections.Generic.IList<Im> Im { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("links")]
        public virtual System.Collections.Generic.IList<EntryLink> Links { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual Name Name { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("organization")]
        public virtual System.Collections.Generic.IList<Organization> Organization { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("phoneNumber")]
        public virtual System.Collections.Generic.IList<PhoneNumber> PhoneNumber { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("structuredPostalAddress")]
        public virtual System.Collections.Generic.IList<StructuredPostalAddress> StructuredPostalAddress { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("updated")]
        public virtual string Updated { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("where")]
        public virtual Where Where { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Contacts : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("contacts")]
        public virtual System.Collections.Generic.IList<Contact> ContactsValue { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("max-results")]
        public virtual System.Nullable<int> MaxResults { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("start-index")]
        public virtual System.Nullable<int> StartIndex { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Email : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual string Address { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("displayName")]
        public virtual string DisplayName { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("primary")]
        public virtual System.Nullable<bool> Primary { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("rel")]
        public virtual string Rel { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class EntryLink : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("entry")]
        public virtual Contact Entry { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("href")]
        public virtual string Href { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("readOnly")]
        public virtual System.Nullable<bool> ReadOnly__ { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("rel")]
        public virtual string Rel { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class ExtendedProperty : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("foreignElement")]
        public virtual string ForeignElement { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("name")]
        public virtual string Name { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("realm")]
        public virtual string Realm { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("value")]
        public virtual string Value { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Im : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("address")]
        public virtual string Address { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("primary")]
        public virtual System.Nullable<bool> Primary { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("protocol")]
        public virtual string Protocol { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("rel")]
        public virtual string Rel { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Name : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("additionalName")]
        public virtual string AdditionalName { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("familyName")]
        public virtual string FamilyName { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("fullName")]
        public virtual string FullName { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("givenName")]
        public virtual string GivenName { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("namePrefix")]
        public virtual string NamePrefix { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("nameSuffix")]
        public virtual string NameSuffix { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Organization : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("orgDepartment")]
        public virtual string OrgDepartment { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("orgJobDescription")]
        public virtual string OrgJobDescription { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("orgName")]
        public virtual string OrgName { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("orgSymbol")]
        public virtual string OrgSymbol { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("orgTitle")]
        public virtual string OrgTitle { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("primary")]
        public virtual System.Nullable<bool> Primary { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("rel")]
        public virtual string Rel { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("where")]
        public virtual Where Where { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class PhoneNumber : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("primary")]
        public virtual System.Nullable<bool> Primary { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("rel")]
        public virtual string Rel { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("text")]
        public virtual string Text { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("uri")]
        public virtual string Uri { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Photo : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("image")]
        public virtual string Image { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class StructuredPostalAddress : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("agent")]
        public virtual string Agent { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("city")]
        public virtual string City { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("country")]
        public virtual string Country { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("formattedAddress")]
        public virtual string FormattedAddress { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("housename")]
        public virtual string Housename { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("mailClass")]
        public virtual string MailClass { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("neighborhood")]
        public virtual string Neighborhood { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("pobox")]
        public virtual string Pobox { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("postcode")]
        public virtual string Postcode { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("primary")]
        public virtual System.Nullable<bool> Primary { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("region")]
        public virtual string Region { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("rel")]
        public virtual string Rel { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("street")]
        public virtual string Street { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("subregion")]
        public virtual string Subregion { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("usage")]
        public virtual string Usage { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }    

    public class Where : Google.Apis.Requests.IDirectResponseSchema
    {
        [Newtonsoft.Json.JsonPropertyAttribute("entryLink")]
        public virtual EntryLink EntryLink { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("label")]
        public virtual string Label { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("rel")]
        public virtual string Rel { get; set; } 

        [Newtonsoft.Json.JsonPropertyAttribute("valueString")]
        public virtual string ValueString { get; set; } 

        /// <summary>The ETag of the item.</summary>
        public virtual string ETag { get; set; }
    }
}

namespace Google.Apis.admin.Sharedcontacts.sharedcontacts_v3
{
    /// <summary>The Sharedcontacts Service.</summary>
    public class SharedcontactsService : Google.Apis.Services.BaseClientService
    {
        /// <summary>The API version.</summary>
        public const string Version = "sharedcontacts_v3";

        /// <summary>The discovery version used to generate this service.</summary>
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed =
            Google.Apis.Discovery.DiscoveryVersion.Version_1_0;

        /// <summary>Constructs a new service.</summary>
        public SharedcontactsService() :
            this(new Google.Apis.Services.BaseClientService.Initializer()) {}

        /// <summary>Constructs a new service.</summary>
        /// <param name="initializer">The service initializer.</param>
        public SharedcontactsService(Google.Apis.Services.BaseClientService.Initializer initializer)
            : base(initializer)
        {
            contact = new ContactResource(this);
            photo = new PhotoResource(this);
        }

        /// <summary>Gets the service supported features.</summary>
        public override System.Collections.Generic.IList<string> Features
        {
            get { return new string[0]; }
        }

        /// <summary>Gets the service name.</summary>
        public override string Name
        {
            get { return "admin"; }
        }

        /// <summary>Gets the service base URI.</summary>
        public override string BaseUri
        {
            get { return "https://www.google.com/m8/feeds/contacts/"; }
        }

        /// <summary>Gets the service base path.</summary>
        public override string BasePath
        {
            get { return "m8/feeds/contacts/"; }
        }

        /// <summary>Available OAuth 2.0 scopes for use with the Admin Email Settings API.</summary>
        public class Scope
        {
            /// <summary>Global scope for access to all domain shared contacts</summary>
            public static string HttpWwwGoogleComM8FeedsContacts = "http://www.google.com/m8/feeds/contacts/";

        }



        private readonly ContactResource contact;

        /// <summary>Gets the Contact resource.</summary>
        public virtual ContactResource Contact
        {
            get { return contact; }
        }

        private readonly PhotoResource photo;

        /// <summary>Gets the Photo resource.</summary>
        public virtual PhotoResource Photo
        {
            get { return photo; }
        }
    }

    ///<summary>A base abstract class for Sharedcontacts requests.</summary>
    public abstract class SharedcontactsBaseServiceRequest<TResponse> : Google.Apis.Requests.ClientServiceRequest<TResponse>
    {
        ///<summary>Constructs a new SharedcontactsBaseServiceRequest instance.</summary>
        protected SharedcontactsBaseServiceRequest(Google.Apis.Services.IClientService service)
            : base(service)
        {
        }

        /// <summary>Data format for the response.</summary>
        /// [default: atom+xml]
        [Google.Apis.Util.RequestParameterAttribute("alt", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<AltEnum> Alt { get; set; }

        /// <summary>Data format for the response.</summary>
        public enum AltEnum
        {
            /// <summary>Responses with Content-Type of application/xml</summary>
            [Google.Apis.Util.StringValueAttribute("atom+xml")]
            AtomXml,
        }

        /// <summary>Selector specifying which fields to include in a partial response.</summary>
        [Google.Apis.Util.RequestParameterAttribute("fields", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Fields { get; set; }

        /// <summary>API key. Your API key identifies your project and provides you with API access, quota, and reports.
        /// Required unless you provide an OAuth 2.0 token.</summary>
        [Google.Apis.Util.RequestParameterAttribute("key", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string Key { get; set; }

        /// <summary>Oauth 2.0 token for the current user.</summary>
        [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string OauthToken { get; set; }

        /// <summary>Returns response with indentations and line breaks.</summary>
        /// [default: true]
        [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
        public virtual System.Nullable<bool> PrettyPrint { get; set; }

        /// <summary>Available to use for quota purposes for server-side applications. Can be any arbitrary string
        /// assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.</summary>
        [Google.Apis.Util.RequestParameterAttribute("quotaUser", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string QuotaUser { get; set; }

        /// <summary>IP address of the site where the request originates. Use this if you want to enforce per-user
        /// limits.</summary>
        [Google.Apis.Util.RequestParameterAttribute("userIp", Google.Apis.Util.RequestParameterType.Query)]
        public virtual string UserIp { get; set; }

        /// <summary>Initializes Sharedcontacts parameter list.</summary>
        protected override void InitParameters()
        {
            base.InitParameters();

            RequestParameters.Add(
                "alt", new Google.Apis.Discovery.Parameter
                {
                    Name = "alt",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "atom+xml",
                    Pattern = null,
                });
            RequestParameters.Add(
                "fields", new Google.Apis.Discovery.Parameter
                {
                    Name = "fields",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "key", new Google.Apis.Discovery.Parameter
                {
                    Name = "key",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "oauth_token", new Google.Apis.Discovery.Parameter
                {
                    Name = "oauth_token",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "prettyPrint", new Google.Apis.Discovery.Parameter
                {
                    Name = "prettyPrint",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = "true",
                    Pattern = null,
                });
            RequestParameters.Add(
                "quotaUser", new Google.Apis.Discovery.Parameter
                {
                    Name = "quotaUser",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
            RequestParameters.Add(
                "userIp", new Google.Apis.Discovery.Parameter
                {
                    Name = "userIp",
                    IsRequired = false,
                    ParameterType = "query",
                    DefaultValue = null,
                    Pattern = null,
                });
        }
    }

    /// <summary>The "contact" collection of methods.</summary>
    public class ContactResource
    {
        private const string Resource = "contact";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public ContactResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }



        /// <param name="domain"></param>
        /// <param name="id"></param>
        /// <param name="version"></param>
        public virtual DeleteRequest Delete(string domain, string id, string version)
        {
            return new DeleteRequest(service, domain, id, version);
        }


        public class DeleteRequest : SharedcontactsBaseServiceRequest<string>
        {
            /// <summary>Constructs a new Delete request.</summary>
            public DeleteRequest(Google.Apis.Services.IClientService service, string domain, string id, string version)
                : base(service)
            {
                Domain = domain;
                Id = id;
                Version = version;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("domain", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Domain { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Version { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "delete"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "DELETE"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{domain}/full/{id}/{version}"; }
            }

            /// <summary>Initializes Delete parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "domain", new Google.Apis.Discovery.Parameter
                    {
                        Name = "domain",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "version", new Google.Apis.Discovery.Parameter
                    {
                        Name = "version",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="domain"></param>
        /// <param name="id"></param>
        public virtual GetRequest Get(string domain, string id)
        {
            return new GetRequest(service, domain, id);
        }


        public class GetRequest : SharedcontactsBaseServiceRequest<Google.Apis.admin.Sharedcontacts.sharedcontacts_v3.Data.Contact>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string domain, string id)
                : base(service)
            {
                Domain = domain;
                Id = id;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("domain", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Domain { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{domain}/full/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "domain", new Google.Apis.Discovery.Parameter
                    {
                        Name = "domain",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="body">The body of the request.</param>
        /// <param name="domain"></param>
        public virtual InsertRequest Insert(Google.Apis.admin.Sharedcontacts.sharedcontacts_v3.Data.Contact body, string domain)
        {
            return new InsertRequest(service, body, domain);
        }


        public class InsertRequest : SharedcontactsBaseServiceRequest<Google.Apis.admin.Sharedcontacts.sharedcontacts_v3.Data.Contact>
        {
            /// <summary>Constructs a new Insert request.</summary>
            public InsertRequest(Google.Apis.Services.IClientService service, Google.Apis.admin.Sharedcontacts.sharedcontacts_v3.Data.Contact body, string domain)
                : base(service)
            {
                Domain = domain;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("domain", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Domain { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.admin.Sharedcontacts.sharedcontacts_v3.Data.Contact Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "insert"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "POST"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{domain}/full"; }
            }

            /// <summary>Initializes Insert parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "domain", new Google.Apis.Discovery.Parameter
                    {
                        Name = "domain",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="domain"></param>
        public virtual ListRequest List(string domain)
        {
            return new ListRequest(service, domain);
        }


        public class ListRequest : SharedcontactsBaseServiceRequest<Google.Apis.admin.Sharedcontacts.sharedcontacts_v3.Data.Contacts>
        {
            /// <summary>Constructs a new List request.</summary>
            public ListRequest(Google.Apis.Services.IClientService service, string domain)
                : base(service)
            {
                Domain = domain;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("domain", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Domain { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("max-results", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> MaxResults { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("start-index", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<int> StartIndex { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("updated-min", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string UpdatedMin { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("orderby", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Orderby { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("showdeleted", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Showdeleted { get; set; }


            [Google.Apis.Util.RequestParameterAttribute("sortorder", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Sortorder { get; set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "list"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{domain}/full"; }
            }

            /// <summary>Initializes List parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "domain", new Google.Apis.Discovery.Parameter
                    {
                        Name = "domain",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "max-results", new Google.Apis.Discovery.Parameter
                    {
                        Name = "max-results",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "start-index", new Google.Apis.Discovery.Parameter
                    {
                        Name = "start-index",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "updated-min", new Google.Apis.Discovery.Parameter
                    {
                        Name = "updated-min",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "orderby", new Google.Apis.Discovery.Parameter
                    {
                        Name = "orderby",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "showdeleted", new Google.Apis.Discovery.Parameter
                    {
                        Name = "showdeleted",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "sortorder", new Google.Apis.Discovery.Parameter
                    {
                        Name = "sortorder",
                        IsRequired = false,
                        ParameterType = "query",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }


        /// <param name="body">The body of the request.</param>
        /// <param name="domain"></param>
        /// <param name="id"></param>
        /// <param name="version"></param>
        public virtual UpdateRequest Update(Google.Apis.admin.Sharedcontacts.sharedcontacts_v3.Data.Contact body, string domain, string id, string version)
        {
            return new UpdateRequest(service, body, domain, id, version);
        }


        public class UpdateRequest : SharedcontactsBaseServiceRequest<Google.Apis.admin.Sharedcontacts.sharedcontacts_v3.Data.Contact>
        {
            /// <summary>Constructs a new Update request.</summary>
            public UpdateRequest(Google.Apis.Services.IClientService service, Google.Apis.admin.Sharedcontacts.sharedcontacts_v3.Data.Contact body, string domain, string id, string version)
                : base(service)
            {
                Domain = domain;
                Id = id;
                Version = version;
                Body = body;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("domain", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Domain { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("version", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Version { get; private set; }


            /// <summary>Gets or sets the body of this request.</summary>
            Google.Apis.admin.Sharedcontacts.sharedcontacts_v3.Data.Contact Body { get; set; }

            ///<summary>Returns the body of the request.</summary>
            protected override object GetBody() { return Body; }

            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "update"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "PUT"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{domain}/full/{id}/{version}"; }
            }

            /// <summary>Initializes Update parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "domain", new Google.Apis.Discovery.Parameter
                    {
                        Name = "domain",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "version", new Google.Apis.Discovery.Parameter
                    {
                        Name = "version",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }

    /// <summary>The "photo" collection of methods.</summary>
    public class PhotoResource
    {
        private const string Resource = "photo";

        /// <summary>The service which this resource belongs to.</summary>
        private readonly Google.Apis.Services.IClientService service;

        /// <summary>Constructs a new resource.</summary>
        public PhotoResource(Google.Apis.Services.IClientService service)
        {
            this.service = service;

        }



        /// <param name="domain"></param>
        /// <param name="id"></param>
        public virtual GetRequest Get(string domain, string id)
        {
            return new GetRequest(service, domain, id);
        }


        public class GetRequest : SharedcontactsBaseServiceRequest<Google.Apis.admin.Sharedcontacts.sharedcontacts_v3.Data.Photo>
        {
            /// <summary>Constructs a new Get request.</summary>
            public GetRequest(Google.Apis.Services.IClientService service, string domain, string id)
                : base(service)
            {
                Domain = domain;
                Id = id;
                InitParameters();
            }



            [Google.Apis.Util.RequestParameterAttribute("domain", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Domain { get; private set; }


            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Id { get; private set; }


            ///<summary>Gets the method name.</summary>
            public override string MethodName
            {
                get { return "get"; }
            }

            ///<summary>Gets the HTTP method.</summary>
            public override string HttpMethod
            {
                get { return "GET"; }
            }

            ///<summary>Gets the REST path.</summary>
            public override string RestPath
            {
                get { return "{domain}/full/{id}"; }
            }

            /// <summary>Initializes Get parameter list.</summary>
            protected override void InitParameters()
            {
                base.InitParameters();

                RequestParameters.Add(
                    "domain", new Google.Apis.Discovery.Parameter
                    {
                        Name = "domain",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
                RequestParameters.Add(
                    "id", new Google.Apis.Discovery.Parameter
                    {
                        Name = "id",
                        IsRequired = true,
                        ParameterType = "path",
                        DefaultValue = null,
                        Pattern = null,
                    });
            }

        }
    }
}
